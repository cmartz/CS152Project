##  primes.min: compute primes using Sieve of Eratosthenes
##  (http://en.wikipedia.org/wiki/Sieve_of_Eratosthenes)
##
##  Compute primes up to a specified n by crossing out multiples of successively
##  larger primes in a boolean array.  The array stores a[k] = 1 if k is composite
##  (not prime), and a[k] = 0 if k is not divisible by the divisors considered
##  thus far.
##
##  Requires a specified integer n as input, assumed to be < 1000.

program primes;

a : integer;
b : integer;
c : integer;

x : integer;
y : integer;
z : integer;

arr : array[1000] of integer;

beginprogram	## main program
    ## compute the square root of n and put the result in sqrt_n
    read a, b, c;

    write x, y, z;

    read y;

    write b;

    read arr[999], x, arr[185];
    
    write a, arr[567], b, arr[123];

endprogram
